// Mocks generated by Mockito 5.4.5 from annotations
// in snap_jp_learn_app/test/services/backup_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:image_picker/image_picker.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:snap_jp_learn_app/models/post.dart' as _i2;
import 'package:snap_jp_learn_app/models/review_log.dart' as _i4;
import 'package:snap_jp_learn_app/models/srs_card.dart' as _i3;
import 'package:snap_jp_learn_app/repositories/post_repository.dart' as _i5;
import 'package:snap_jp_learn_app/repositories/srs_repository.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePost_0 extends _i1.SmartFake implements _i2.Post {
  _FakePost_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSrsCard_1 extends _i1.SmartFake implements _i3.SrsCard {
  _FakeSrsCard_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReviewLog_2 extends _i1.SmartFake implements _i4.ReviewLog {
  _FakeReviewLog_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PostRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostRepository extends _i1.Mock implements _i5.PostRepository {
  MockPostRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Post> createPost({
    required _i7.XFile? image,
    required String? raw,
    required String? normalized,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPost,
          [],
          {
            #image: image,
            #raw: raw,
            #normalized: normalized,
          },
        ),
        returnValue: _i6.Future<_i2.Post>.value(_FakePost_0(
          this,
          Invocation.method(
            #createPost,
            [],
            {
              #image: image,
              #raw: raw,
              #normalized: normalized,
            },
          ),
        )),
      ) as _i6.Future<_i2.Post>);

  @override
  _i6.Future<List<_i2.Post>> listPosts({
    int? limit = 100,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listPosts,
          [],
          {
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i6.Future<List<_i2.Post>>.value(<_i2.Post>[]),
      ) as _i6.Future<List<_i2.Post>>);

  @override
  _i6.Future<_i2.Post?> getPost(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getPost,
          [id],
        ),
        returnValue: _i6.Future<_i2.Post?>.value(),
      ) as _i6.Future<_i2.Post?>);

  @override
  _i6.Future<void> toggleLike(String? id) => (super.noSuchMethod(
        Invocation.method(
          #toggleLike,
          [id],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> toggleLearned(String? id) => (super.noSuchMethod(
        Invocation.method(
          #toggleLearned,
          [id],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> deletePost(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deletePost,
          [id],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<int> getPostCount() => (super.noSuchMethod(
        Invocation.method(
          #getPostCount,
          [],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<int> getLikedPostCount() => (super.noSuchMethod(
        Invocation.method(
          #getLikedPostCount,
          [],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<int> getLearnedPostCount() => (super.noSuchMethod(
        Invocation.method(
          #getLearnedPostCount,
          [],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<List<Map<String, dynamic>>> exportPosts() => (super.noSuchMethod(
        Invocation.method(
          #exportPosts,
          [],
        ),
        returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i6.Future<List<Map<String, dynamic>>>);

  @override
  _i6.Future<void> importPosts(List<Map<String, dynamic>>? postsData) =>
      (super.noSuchMethod(
        Invocation.method(
          #importPosts,
          [postsData],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<List<_i2.Post>> getAllPosts() => (super.noSuchMethod(
        Invocation.method(
          #getAllPosts,
          [],
        ),
        returnValue: _i6.Future<List<_i2.Post>>.value(<_i2.Post>[]),
      ) as _i6.Future<List<_i2.Post>>);

  @override
  _i6.Future<void> clearAllPosts() => (super.noSuchMethod(
        Invocation.method(
          #clearAllPosts,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<List<_i2.Post>> searchPosts({
    required String? query,
    int? limit = 100,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchPosts,
          [],
          {
            #query: query,
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i6.Future<List<_i2.Post>>.value(<_i2.Post>[]),
      ) as _i6.Future<List<_i2.Post>>);

  @override
  _i6.Future<List<_i2.Post>> filterPosts({
    DateTime? startDate,
    DateTime? endDate,
    bool? likedOnly,
    bool? learnedOnly,
    bool? hasCards,
    String? sortBy = 'newest',
    int? limit = 100,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #filterPosts,
          [],
          {
            #startDate: startDate,
            #endDate: endDate,
            #likedOnly: likedOnly,
            #learnedOnly: learnedOnly,
            #hasCards: hasCards,
            #sortBy: sortBy,
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i6.Future<List<_i2.Post>>.value(<_i2.Post>[]),
      ) as _i6.Future<List<_i2.Post>>);

  @override
  _i6.Future<List<_i2.Post>> searchAndFilterPosts({
    String? query,
    DateTime? startDate,
    DateTime? endDate,
    bool? likedOnly,
    bool? learnedOnly,
    bool? hasCards,
    String? sortBy = 'newest',
    int? limit = 100,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchAndFilterPosts,
          [],
          {
            #query: query,
            #startDate: startDate,
            #endDate: endDate,
            #likedOnly: likedOnly,
            #learnedOnly: learnedOnly,
            #hasCards: hasCards,
            #sortBy: sortBy,
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i6.Future<List<_i2.Post>>.value(<_i2.Post>[]),
      ) as _i6.Future<List<_i2.Post>>);

  @override
  _i6.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [SrsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSrsRepository extends _i1.Mock implements _i8.SrsRepository {
  MockSrsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i3.SrsCard>> listDueCards({
    DateTime? now,
    int? limit = 20,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listDueCards,
          [],
          {
            #now: now,
            #limit: limit,
          },
        ),
        returnValue: _i6.Future<List<_i3.SrsCard>>.value(<_i3.SrsCard>[]),
      ) as _i6.Future<List<_i3.SrsCard>>);

  @override
  _i6.Future<_i3.SrsCard> upsertCard(_i3.SrsCard? card) => (super.noSuchMethod(
        Invocation.method(
          #upsertCard,
          [card],
        ),
        returnValue: _i6.Future<_i3.SrsCard>.value(_FakeSrsCard_1(
          this,
          Invocation.method(
            #upsertCard,
            [card],
          ),
        )),
      ) as _i6.Future<_i3.SrsCard>);

  @override
  _i6.Future<void> review(
    String? cardId,
    _i4.Rating? rating,
    DateTime? now,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #review,
          [
            cardId,
            rating,
            now,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<List<_i3.SrsCard>> listByPost(String? postId) =>
      (super.noSuchMethod(
        Invocation.method(
          #listByPost,
          [postId],
        ),
        returnValue: _i6.Future<List<_i3.SrsCard>>.value(<_i3.SrsCard>[]),
      ) as _i6.Future<List<_i3.SrsCard>>);

  @override
  _i6.Future<void> deleteByPost(String? postId) => (super.noSuchMethod(
        Invocation.method(
          #deleteByPost,
          [postId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> deleteCard(String? cardId) => (super.noSuchMethod(
        Invocation.method(
          #deleteCard,
          [cardId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i3.SrsCard?> getCard(String? cardId) => (super.noSuchMethod(
        Invocation.method(
          #getCard,
          [cardId],
        ),
        returnValue: _i6.Future<_i3.SrsCard?>.value(),
      ) as _i6.Future<_i3.SrsCard?>);

  @override
  _i6.Future<int> getCardCount() => (super.noSuchMethod(
        Invocation.method(
          #getCardCount,
          [],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<int> getDueCardCount({DateTime? now}) => (super.noSuchMethod(
        Invocation.method(
          #getDueCardCount,
          [],
          {#now: now},
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<int> getTodayReviewCount() => (super.noSuchMethod(
        Invocation.method(
          #getTodayReviewCount,
          [],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<Map<String, int>> getCardsByStatus() => (super.noSuchMethod(
        Invocation.method(
          #getCardsByStatus,
          [],
        ),
        returnValue: _i6.Future<Map<String, int>>.value(<String, int>{}),
      ) as _i6.Future<Map<String, int>>);

  @override
  _i6.Future<List<_i4.ReviewLog>> getReviewLogsByCard(String? cardId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReviewLogsByCard,
          [cardId],
        ),
        returnValue: _i6.Future<List<_i4.ReviewLog>>.value(<_i4.ReviewLog>[]),
      ) as _i6.Future<List<_i4.ReviewLog>>);

  @override
  _i6.Future<List<_i4.ReviewLog>> getReviewLogsByDate(DateTime? date) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReviewLogsByDate,
          [date],
        ),
        returnValue: _i6.Future<List<_i4.ReviewLog>>.value(<_i4.ReviewLog>[]),
      ) as _i6.Future<List<_i4.ReviewLog>>);

  @override
  _i6.Future<Map<String, dynamic>?> getCardStats(String? cardId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCardStats,
          [cardId],
        ),
        returnValue: _i6.Future<Map<String, dynamic>?>.value(),
      ) as _i6.Future<Map<String, dynamic>?>);

  @override
  _i6.Future<int> createCardsFromCandidates(
    List<dynamic>? candidates,
    String? sourcePostId,
    String? sourceSnippet,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createCardsFromCandidates,
          [
            candidates,
            sourcePostId,
            sourceSnippet,
          ],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<List<_i3.SrsCard>> getAllCards() => (super.noSuchMethod(
        Invocation.method(
          #getAllCards,
          [],
        ),
        returnValue: _i6.Future<List<_i3.SrsCard>>.value(<_i3.SrsCard>[]),
      ) as _i6.Future<List<_i3.SrsCard>>);

  @override
  _i6.Future<List<_i3.SrsCard>> getDueCards() => (super.noSuchMethod(
        Invocation.method(
          #getDueCards,
          [],
        ),
        returnValue: _i6.Future<List<_i3.SrsCard>>.value(<_i3.SrsCard>[]),
      ) as _i6.Future<List<_i3.SrsCard>>);

  @override
  _i6.Future<List<_i4.ReviewLog>> getAllReviewLogs() => (super.noSuchMethod(
        Invocation.method(
          #getAllReviewLogs,
          [],
        ),
        returnValue: _i6.Future<List<_i4.ReviewLog>>.value(<_i4.ReviewLog>[]),
      ) as _i6.Future<List<_i4.ReviewLog>>);

  @override
  _i6.Future<_i4.ReviewLog> createReviewLog(_i4.ReviewLog? log) =>
      (super.noSuchMethod(
        Invocation.method(
          #createReviewLog,
          [log],
        ),
        returnValue: _i6.Future<_i4.ReviewLog>.value(_FakeReviewLog_2(
          this,
          Invocation.method(
            #createReviewLog,
            [log],
          ),
        )),
      ) as _i6.Future<_i4.ReviewLog>);

  @override
  _i6.Future<void> clearAllData() => (super.noSuchMethod(
        Invocation.method(
          #clearAllData,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<List<_i3.SrsCard>> findDuplicates({String? term}) =>
      (super.noSuchMethod(
        Invocation.method(
          #findDuplicates,
          [],
          {#term: term},
        ),
        returnValue: _i6.Future<List<_i3.SrsCard>>.value(<_i3.SrsCard>[]),
      ) as _i6.Future<List<_i3.SrsCard>>);

  @override
  _i6.Future<_i3.SrsCard> mergeCards({
    required String? baseId,
    required List<String>? mergeIds,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #mergeCards,
          [],
          {
            #baseId: baseId,
            #mergeIds: mergeIds,
          },
        ),
        returnValue: _i6.Future<_i3.SrsCard>.value(_FakeSrsCard_1(
          this,
          Invocation.method(
            #mergeCards,
            [],
            {
              #baseId: baseId,
              #mergeIds: mergeIds,
            },
          ),
        )),
      ) as _i6.Future<_i3.SrsCard>);

  @override
  _i6.Future<List<_i3.SrsCard>> searchByTerm(String? term) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchByTerm,
          [term],
        ),
        returnValue: _i6.Future<List<_i3.SrsCard>>.value(<_i3.SrsCard>[]),
      ) as _i6.Future<List<_i3.SrsCard>>);

  @override
  _i6.Future<List<_i3.SrsCard>> searchCards({
    required String? query,
    int? limit = 100,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchCards,
          [],
          {
            #query: query,
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i6.Future<List<_i3.SrsCard>>.value(<_i3.SrsCard>[]),
      ) as _i6.Future<List<_i3.SrsCard>>);

  @override
  _i6.Future<List<_i3.SrsCard>> filterCards({
    String? status,
    DateTime? startDate,
    DateTime? endDate,
    String? sortBy = 'newest',
    int? limit = 100,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #filterCards,
          [],
          {
            #status: status,
            #startDate: startDate,
            #endDate: endDate,
            #sortBy: sortBy,
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i6.Future<List<_i3.SrsCard>>.value(<_i3.SrsCard>[]),
      ) as _i6.Future<List<_i3.SrsCard>>);

  @override
  _i6.Future<List<_i3.SrsCard>> searchAndFilterCards({
    String? query,
    String? status,
    DateTime? startDate,
    DateTime? endDate,
    String? sortBy = 'newest',
    int? limit = 100,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchAndFilterCards,
          [],
          {
            #query: query,
            #status: status,
            #startDate: startDate,
            #endDate: endDate,
            #sortBy: sortBy,
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i6.Future<List<_i3.SrsCard>>.value(<_i3.SrsCard>[]),
      ) as _i6.Future<List<_i3.SrsCard>>);

  @override
  _i6.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}
